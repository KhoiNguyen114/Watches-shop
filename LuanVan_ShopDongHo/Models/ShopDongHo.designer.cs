#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LuanVan_ShopDongHo.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_CUAHANGDH")]
	public partial class ShopDongHoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBINHLUAN(BINHLUAN instance);
    partial void UpdateBINHLUAN(BINHLUAN instance);
    partial void DeleteBINHLUAN(BINHLUAN instance);
    partial void InsertBAOHANH(BAOHANH instance);
    partial void UpdateBAOHANH(BAOHANH instance);
    partial void DeleteBAOHANH(BAOHANH instance);
    partial void InsertCHITIETKHUYENMAI(CHITIETKHUYENMAI instance);
    partial void UpdateCHITIETKHUYENMAI(CHITIETKHUYENMAI instance);
    partial void DeleteCHITIETKHUYENMAI(CHITIETKHUYENMAI instance);
    partial void InsertCHUONGTRINHVOUCHER(CHUONGTRINHVOUCHER instance);
    partial void UpdateCHUONGTRINHVOUCHER(CHUONGTRINHVOUCHER instance);
    partial void DeleteCHUONGTRINHVOUCHER(CHUONGTRINHVOUCHER instance);
    partial void InsertCHITIETHD(CHITIETHD instance);
    partial void UpdateCHITIETHD(CHITIETHD instance);
    partial void DeleteCHITIETHD(CHITIETHD instance);
    partial void InsertCHITIETPN(CHITIETPN instance);
    partial void UpdateCHITIETPN(CHITIETPN instance);
    partial void DeleteCHITIETPN(CHITIETPN instance);
    partial void InsertDANHMUCSP(DANHMUCSP instance);
    partial void UpdateDANHMUCSP(DANHMUCSP instance);
    partial void DeleteDANHMUCSP(DANHMUCSP instance);
    partial void InsertGROUPNAME(GROUPNAME instance);
    partial void UpdateGROUPNAME(GROUPNAME instance);
    partial void DeleteGROUPNAME(GROUPNAME instance);
    partial void InsertGROUPPERMISSION(GROUPPERMISSION instance);
    partial void UpdateGROUPPERMISSION(GROUPPERMISSION instance);
    partial void DeleteGROUPPERMISSION(GROUPPERMISSION instance);
    partial void InsertHINHTHUC(HINHTHUC instance);
    partial void UpdateHINHTHUC(HINHTHUC instance);
    partial void DeleteHINHTHUC(HINHTHUC instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertHANG(HANG instance);
    partial void UpdateHANG(HANG instance);
    partial void DeleteHANG(HANG instance);
    partial void InsertKHO(KHO instance);
    partial void UpdateKHO(KHO instance);
    partial void DeleteKHO(KHO instance);
    partial void InsertLOAITK(LOAITK instance);
    partial void UpdateLOAITK(LOAITK instance);
    partial void DeleteLOAITK(LOAITK instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNOIDUNGBH(NOIDUNGBH instance);
    partial void UpdateNOIDUNGBH(NOIDUNGBH instance);
    partial void DeleteNOIDUNGBH(NOIDUNGBH instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTINTUC(TINTUC instance);
    partial void UpdateTINTUC(TINTUC instance);
    partial void DeleteTINTUC(TINTUC instance);
    partial void InsertVOUCHER(VOUCHER instance);
    partial void UpdateVOUCHER(VOUCHER instance);
    partial void DeleteVOUCHER(VOUCHER instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
    partial void InsertPERMISSION(PERMISSION instance);
    partial void UpdatePERMISSION(PERMISSION instance);
    partial void DeletePERMISSION(PERMISSION instance);
    #endregion
		
		public ShopDongHoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QL_CUAHANGDHConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDongHoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDongHoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDongHoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDongHoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BINHLUAN> BINHLUANs
		{
			get
			{
				return this.GetTable<BINHLUAN>();
			}
		}
		
		public System.Data.Linq.Table<BAOHANH> BAOHANHs
		{
			get
			{
				return this.GetTable<BAOHANH>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETKHUYENMAI> CHITIETKHUYENMAIs
		{
			get
			{
				return this.GetTable<CHITIETKHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<CHUONGTRINHVOUCHER> CHUONGTRINHVOUCHERs
		{
			get
			{
				return this.GetTable<CHUONGTRINHVOUCHER>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this.GetTable<CHITIETHD>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETPN> CHITIETPNs
		{
			get
			{
				return this.GetTable<CHITIETPN>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUCSP> DANHMUCSPs
		{
			get
			{
				return this.GetTable<DANHMUCSP>();
			}
		}
		
		public System.Data.Linq.Table<GROUPNAME> GROUPNAMEs
		{
			get
			{
				return this.GetTable<GROUPNAME>();
			}
		}
		
		public System.Data.Linq.Table<GROUPPERMISSION> GROUPPERMISSIONs
		{
			get
			{
				return this.GetTable<GROUPPERMISSION>();
			}
		}
		
		public System.Data.Linq.Table<HINHTHUC> HINHTHUCs
		{
			get
			{
				return this.GetTable<HINHTHUC>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<HANG> HANGs
		{
			get
			{
				return this.GetTable<HANG>();
			}
		}
		
		public System.Data.Linq.Table<KHO> KHOs
		{
			get
			{
				return this.GetTable<KHO>();
			}
		}
		
		public System.Data.Linq.Table<LOAITK> LOAITKs
		{
			get
			{
				return this.GetTable<LOAITK>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NOIDUNGBH> NOIDUNGBHs
		{
			get
			{
				return this.GetTable<NOIDUNGBH>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TINTUC> TINTUCs
		{
			get
			{
				return this.GetTable<TINTUC>();
			}
		}
		
		public System.Data.Linq.Table<VOUCHER> VOUCHERs
		{
			get
			{
				return this.GetTable<VOUCHER>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<PERMISSION> PERMISSIONs
		{
			get
			{
				return this.GetTable<PERMISSION>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BINHLUAN")]
	public partial class BINHLUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBINHLUAN;
		
		private string _MASP;
		
		private System.Nullable<int> _IDTINTUC;
		
		private string _TENDN;
		
		private System.Nullable<System.DateTime> _NGAYTAO;
		
		private string _NOIDUNG;
		
		private System.Nullable<bool> _ISTINTUC;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
		private EntityRef<TINTUC> _TINTUC;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBINHLUANChanging(int value);
    partial void OnIDBINHLUANChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnIDTINTUCChanging(System.Nullable<int> value);
    partial void OnIDTINTUCChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnNGAYTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTAOChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnISTINTUCChanging(System.Nullable<bool> value);
    partial void OnISTINTUCChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public BINHLUAN()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			this._TINTUC = default(EntityRef<TINTUC>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBINHLUAN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBINHLUAN
		{
			get
			{
				return this._IDBINHLUAN;
			}
			set
			{
				if ((this._IDBINHLUAN != value))
				{
					this.OnIDBINHLUANChanging(value);
					this.SendPropertyChanging();
					this._IDBINHLUAN = value;
					this.SendPropertyChanged("IDBINHLUAN");
					this.OnIDBINHLUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101)")]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTINTUC", DbType="Int")]
		public System.Nullable<int> IDTINTUC
		{
			get
			{
				return this._IDTINTUC;
			}
			set
			{
				if ((this._IDTINTUC != value))
				{
					if (this._TINTUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTINTUCChanging(value);
					this.SendPropertyChanging();
					this._IDTINTUC = value;
					this.SendPropertyChanged("IDTINTUC");
					this.OnIDTINTUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NVarChar(51)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTAO", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYTAO
		{
			get
			{
				return this._NGAYTAO;
			}
			set
			{
				if ((this._NGAYTAO != value))
				{
					this.OnNGAYTAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYTAO = value;
					this.SendPropertyChanged("NGAYTAO");
					this.OnNGAYTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISTINTUC", DbType="Bit")]
		public System.Nullable<bool> ISTINTUC
		{
			get
			{
				return this._ISTINTUC;
			}
			set
			{
				if ((this._ISTINTUC != value))
				{
					this.OnISTINTUCChanging(value);
					this.SendPropertyChanging();
					this._ISTINTUC = value;
					this.SendPropertyChanged("ISTINTUC");
					this.OnISTINTUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BINHLUAN", Storage="_TAIKHOAN", ThisKey="TENDN", OtherKey="TENDN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._TENDN = value.TENDN;
					}
					else
					{
						this._TENDN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINTUC_BINHLUAN", Storage="_TINTUC", ThisKey="IDTINTUC", OtherKey="IDTINTUC", IsForeignKey=true)]
		public TINTUC TINTUC
		{
			get
			{
				return this._TINTUC.Entity;
			}
			set
			{
				TINTUC previousValue = this._TINTUC.Entity;
				if (((previousValue != value) 
							|| (this._TINTUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TINTUC.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._TINTUC.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._IDTINTUC = value.IDTINTUC;
					}
					else
					{
						this._IDTINTUC = default(Nullable<int>);
					}
					this.SendPropertyChanged("TINTUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.BINHLUANs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.BINHLUANs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAOHANH")]
	public partial class BAOHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDBAOHANH;
		
		private System.Nullable<int> _IDCHITIET;
		
		private string _MASP;
		
		private System.Nullable<System.DateTime> _THOIGIANBD;
		
		private System.Nullable<System.DateTime> _THOIGIANKT;
		
		private string _GHICHU;
		
		private System.Nullable<bool> _TINHTRANG;
		
		private string _QRCODE;
		
		private EntityRef<CHITIETHD> _CHITIETHD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDBAOHANHChanging(int value);
    partial void OnIDBAOHANHChanged();
    partial void OnIDCHITIETChanging(System.Nullable<int> value);
    partial void OnIDCHITIETChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnTHOIGIANBDChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANBDChanged();
    partial void OnTHOIGIANKTChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANKTChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnTINHTRANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGChanged();
    partial void OnQRCODEChanging(string value);
    partial void OnQRCODEChanged();
    #endregion
		
		public BAOHANH()
		{
			this._CHITIETHD = default(EntityRef<CHITIETHD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBAOHANH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDBAOHANH
		{
			get
			{
				return this._IDBAOHANH;
			}
			set
			{
				if ((this._IDBAOHANH != value))
				{
					this.OnIDBAOHANHChanging(value);
					this.SendPropertyChanging();
					this._IDBAOHANH = value;
					this.SendPropertyChanged("IDBAOHANH");
					this.OnIDBAOHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCHITIET", DbType="Int")]
		public System.Nullable<int> IDCHITIET
		{
			get
			{
				return this._IDCHITIET;
			}
			set
			{
				if ((this._IDCHITIET != value))
				{
					if (this._CHITIETHD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCHITIETChanging(value);
					this.SendPropertyChanging();
					this._IDCHITIET = value;
					this.SendPropertyChanged("IDCHITIET");
					this.OnIDCHITIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101)")]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANBD", DbType="Date")]
		public System.Nullable<System.DateTime> THOIGIANBD
		{
			get
			{
				return this._THOIGIANBD;
			}
			set
			{
				if ((this._THOIGIANBD != value))
				{
					this.OnTHOIGIANBDChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANBD = value;
					this.SendPropertyChanged("THOIGIANBD");
					this.OnTHOIGIANBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANKT", DbType="Date")]
		public System.Nullable<System.DateTime> THOIGIANKT
		{
			get
			{
				return this._THOIGIANKT;
			}
			set
			{
				if ((this._THOIGIANKT != value))
				{
					this.OnTHOIGIANKTChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANKT = value;
					this.SendPropertyChanged("THOIGIANKT");
					this.OnTHOIGIANKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCODE", DbType="NVarChar(MAX)")]
		public string QRCODE
		{
			get
			{
				return this._QRCODE;
			}
			set
			{
				if ((this._QRCODE != value))
				{
					this.OnQRCODEChanging(value);
					this.SendPropertyChanging();
					this._QRCODE = value;
					this.SendPropertyChanged("QRCODE");
					this.OnQRCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHD_BAOHANH", Storage="_CHITIETHD", ThisKey="IDCHITIET", OtherKey="IDCHITIET", IsForeignKey=true)]
		public CHITIETHD CHITIETHD
		{
			get
			{
				return this._CHITIETHD.Entity;
			}
			set
			{
				CHITIETHD previousValue = this._CHITIETHD.Entity;
				if (((previousValue != value) 
							|| (this._CHITIETHD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHITIETHD.Entity = null;
						previousValue.BAOHANHs.Remove(this);
					}
					this._CHITIETHD.Entity = value;
					if ((value != null))
					{
						value.BAOHANHs.Add(this);
						this._IDCHITIET = value.IDCHITIET;
					}
					else
					{
						this._IDCHITIET = default(Nullable<int>);
					}
					this.SendPropertyChanged("CHITIETHD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETKHUYENMAI")]
	public partial class CHITIETKHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKM;
		
		private string _MASP;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    #endregion
		
		public CHITIETKHUYENMAI()
		{
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="NVarChar(201) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKHUYENMAI", Storage="_KHUYENMAI", ThisKey="MAKM", OtherKey="MAKM", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.CHITIETKHUYENMAIs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.CHITIETKHUYENMAIs.Add(this);
						this._MAKM = value.MAKM;
					}
					else
					{
						this._MAKM = default(string);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETKHUYENMAI", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETKHUYENMAIs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETKHUYENMAIs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUONGTRINHVOUCHER")]
	public partial class CHUONGTRINHVOUCHER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUONGTRINH;
		
		private System.Nullable<int> _GIAMGIA;
		
		private System.Nullable<System.DateTime> _NGAYTAO;
		
		private System.Nullable<System.DateTime> _NGAYKETTHUC;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _GHICHU;
		
		private System.Nullable<int> _TINHTRANG;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<VOUCHER> _VOUCHERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUONGTRINHChanging(string value);
    partial void OnMACHUONGTRINHChanged();
    partial void OnGIAMGIAChanging(System.Nullable<int> value);
    partial void OnGIAMGIAChanged();
    partial void OnNGAYTAOChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTAOChanged();
    partial void OnNGAYKETTHUCChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYKETTHUCChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public CHUONGTRINHVOUCHER()
		{
			this._VOUCHERs = new EntitySet<VOUCHER>(new Action<VOUCHER>(this.attach_VOUCHERs), new Action<VOUCHER>(this.detach_VOUCHERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUONGTRINH", DbType="NVarChar(51) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUONGTRINH
		{
			get
			{
				return this._MACHUONGTRINH;
			}
			set
			{
				if ((this._MACHUONGTRINH != value))
				{
					this.OnMACHUONGTRINHChanging(value);
					this.SendPropertyChanging();
					this._MACHUONGTRINH = value;
					this.SendPropertyChanged("MACHUONGTRINH");
					this.OnMACHUONGTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIAMGIA", DbType="Int")]
		public System.Nullable<int> GIAMGIA
		{
			get
			{
				return this._GIAMGIA;
			}
			set
			{
				if ((this._GIAMGIA != value))
				{
					this.OnGIAMGIAChanging(value);
					this.SendPropertyChanging();
					this._GIAMGIA = value;
					this.SendPropertyChanged("GIAMGIA");
					this.OnGIAMGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTAO", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYTAO
		{
			get
			{
				return this._NGAYTAO;
			}
			set
			{
				if ((this._NGAYTAO != value))
				{
					this.OnNGAYTAOChanging(value);
					this.SendPropertyChanging();
					this._NGAYTAO = value;
					this.SendPropertyChanged("NGAYTAO");
					this.OnNGAYTAOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYKETTHUC", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYKETTHUC
		{
			get
			{
				return this._NGAYKETTHUC;
			}
			set
			{
				if ((this._NGAYKETTHUC != value))
				{
					this.OnNGAYKETTHUCChanging(value);
					this.SendPropertyChanging();
					this._NGAYKETTHUC = value;
					this.SendPropertyChanged("NGAYKETTHUC");
					this.OnNGAYKETTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINHVOUCHER_VOUCHER", Storage="_VOUCHERs", ThisKey="MACHUONGTRINH", OtherKey="MACHUONGTRINH")]
		public EntitySet<VOUCHER> VOUCHERs
		{
			get
			{
				return this._VOUCHERs;
			}
			set
			{
				this._VOUCHERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VOUCHERs(VOUCHER entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINHVOUCHER = this;
		}
		
		private void detach_VOUCHERs(VOUCHER entity)
		{
			this.SendPropertyChanging();
			entity.CHUONGTRINHVOUCHER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETHD")]
	public partial class CHITIETHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCHITIET;
		
		private System.Nullable<int> _IDHoaDon;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<long> _DONGIA;
		
		private System.Nullable<long> _KHUYENMAI;
		
		private System.Nullable<long> _THANHTIEN;
		
		private string _QRCODE;
		
		private EntitySet<BAOHANH> _BAOHANHs;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCHITIETChanging(int value);
    partial void OnIDCHITIETChanged();
    partial void OnIDHoaDonChanging(System.Nullable<int> value);
    partial void OnIDHoaDonChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<long> value);
    partial void OnDONGIAChanged();
    partial void OnKHUYENMAIChanging(System.Nullable<long> value);
    partial void OnKHUYENMAIChanged();
    partial void OnTHANHTIENChanging(System.Nullable<long> value);
    partial void OnTHANHTIENChanged();
    partial void OnQRCODEChanging(string value);
    partial void OnQRCODEChanged();
    #endregion
		
		public CHITIETHD()
		{
			this._BAOHANHs = new EntitySet<BAOHANH>(new Action<BAOHANH>(this.attach_BAOHANHs), new Action<BAOHANH>(this.detach_BAOHANHs));
			this._HOADON = default(EntityRef<HOADON>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCHITIET", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCHITIET
		{
			get
			{
				return this._IDCHITIET;
			}
			set
			{
				if ((this._IDCHITIET != value))
				{
					this.OnIDCHITIETChanging(value);
					this.SendPropertyChanging();
					this._IDCHITIET = value;
					this.SendPropertyChanged("IDCHITIET");
					this.OnIDCHITIETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", DbType="Int")]
		public System.Nullable<int> IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101)")]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="BigInt")]
		public System.Nullable<long> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KHUYENMAI", DbType="BigInt")]
		public System.Nullable<long> KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI;
			}
			set
			{
				if ((this._KHUYENMAI != value))
				{
					this.OnKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._KHUYENMAI = value;
					this.SendPropertyChanged("KHUYENMAI");
					this.OnKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt")]
		public System.Nullable<long> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCODE", DbType="NVarChar(255)")]
		public string QRCODE
		{
			get
			{
				return this._QRCODE;
			}
			set
			{
				if ((this._QRCODE != value))
				{
					this.OnQRCODEChanging(value);
					this.SendPropertyChanging();
					this._QRCODE = value;
					this.SendPropertyChanged("QRCODE");
					this.OnQRCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHITIETHD_BAOHANH", Storage="_BAOHANHs", ThisKey="IDCHITIET", OtherKey="IDCHITIET")]
		public EntitySet<BAOHANH> BAOHANHs
		{
			get
			{
				return this._BAOHANHs;
			}
			set
			{
				this._BAOHANHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_HOADON", ThisKey="IDHoaDon", OtherKey="IDHoaDon", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._IDHoaDon = value.IDHoaDon;
					}
					else
					{
						this._IDHoaDon = default(Nullable<int>);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHD", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETHDs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETHDs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHD = this;
		}
		
		private void detach_BAOHANHs(BAOHANH entity)
		{
			this.SendPropertyChanging();
			entity.CHITIETHD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETPN")]
	public partial class CHITIETPN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPhieuNhap;
		
		private string _MASP;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<long> _DONGIA;
		
		private System.Nullable<long> _THANHTIEN;
		
		private System.Nullable<int> _CHIETKHAU;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPhieuNhapChanging(int value);
    partial void OnIDPhieuNhapChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<long> value);
    partial void OnDONGIAChanged();
    partial void OnTHANHTIENChanging(System.Nullable<long> value);
    partial void OnTHANHTIENChanged();
    partial void OnCHIETKHAUChanging(System.Nullable<int> value);
    partial void OnCHIETKHAUChanged();
    #endregion
		
		public CHITIETPN()
		{
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhieuNhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPhieuNhap
		{
			get
			{
				return this._IDPhieuNhap;
			}
			set
			{
				if ((this._IDPhieuNhap != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._IDPhieuNhap = value;
					this.SendPropertyChanged("IDPhieuNhap");
					this.OnIDPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="BigInt")]
		public System.Nullable<long> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="BigInt")]
		public System.Nullable<long> THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHIETKHAU", DbType="Int")]
		public System.Nullable<int> CHIETKHAU
		{
			get
			{
				return this._CHIETKHAU;
			}
			set
			{
				if ((this._CHIETKHAU != value))
				{
					this.OnCHIETKHAUChanging(value);
					this.SendPropertyChanging();
					this._CHIETKHAU = value;
					this.SendPropertyChanged("CHIETKHAU");
					this.OnCHIETKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPN", Storage="_PHIEUNHAP", ThisKey="IDPhieuNhap", OtherKey="IDPhieuNhap", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CHITIETPNs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CHITIETPNs.Add(this);
						this._IDPhieuNhap = value.IDPhieuNhap;
					}
					else
					{
						this._IDPhieuNhap = default(int);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPN", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.CHITIETPNs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CHITIETPNs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUCSP")]
	public partial class DANHMUCSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADM;
		
		private string _TENDM;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADMChanging(string value);
    partial void OnMADMChanged();
    partial void OnTENDMChanging(string value);
    partial void OnTENDMChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public DANHMUCSP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADM", DbType="NVarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADM
		{
			get
			{
				return this._MADM;
			}
			set
			{
				if ((this._MADM != value))
				{
					this.OnMADMChanging(value);
					this.SendPropertyChanging();
					this._MADM = value;
					this.SendPropertyChanged("MADM");
					this.OnMADMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDM", DbType="NVarChar(MAX)")]
		public string TENDM
		{
			get
			{
				return this._TENDM;
			}
			set
			{
				if ((this._TENDM != value))
				{
					this.OnTENDMChanging(value);
					this.SendPropertyChanging();
					this._TENDM = value;
					this.SendPropertyChanged("TENDM");
					this.OnTENDMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUCSP_SANPHAM", Storage="_SANPHAMs", ThisKey="MADM", OtherKey="MADM")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUCSP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.DANHMUCSP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GROUPNAME")]
	public partial class GROUPNAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDGROUP;
		
		private string _NAME;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<GROUPPERMISSION> _GROUPPERMISSIONs;
		
		private EntitySet<PERMISSION> _PERMISSIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDGROUPChanging(int value);
    partial void OnIDGROUPChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public GROUPNAME()
		{
			this._GROUPPERMISSIONs = new EntitySet<GROUPPERMISSION>(new Action<GROUPPERMISSION>(this.attach_GROUPPERMISSIONs), new Action<GROUPPERMISSION>(this.detach_GROUPPERMISSIONs));
			this._PERMISSIONs = new EntitySet<PERMISSION>(new Action<PERMISSION>(this.attach_PERMISSIONs), new Action<PERMISSION>(this.detach_PERMISSIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGROUP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDGROUP
		{
			get
			{
				return this._IDGROUP;
			}
			set
			{
				if ((this._IDGROUP != value))
				{
					this.OnIDGROUPChanging(value);
					this.SendPropertyChanging();
					this._IDGROUP = value;
					this.SendPropertyChanged("IDGROUP");
					this.OnIDGROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(MAX)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUPNAME_GROUPPERMISSION", Storage="_GROUPPERMISSIONs", ThisKey="IDGROUP", OtherKey="IDGROUP")]
		public EntitySet<GROUPPERMISSION> GROUPPERMISSIONs
		{
			get
			{
				return this._GROUPPERMISSIONs;
			}
			set
			{
				this._GROUPPERMISSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUPNAME_PERMISSION", Storage="_PERMISSIONs", ThisKey="IDGROUP", OtherKey="IDGROUP")]
		public EntitySet<PERMISSION> PERMISSIONs
		{
			get
			{
				return this._PERMISSIONs;
			}
			set
			{
				this._PERMISSIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GROUPPERMISSIONs(GROUPPERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.GROUPNAME = this;
		}
		
		private void detach_GROUPPERMISSIONs(GROUPPERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.GROUPNAME = null;
		}
		
		private void attach_PERMISSIONs(PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.GROUPNAME = this;
		}
		
		private void detach_PERMISSIONs(PERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.GROUPNAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GROUPPERMISSION")]
	public partial class GROUPPERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TENDN;
		
		private System.Nullable<int> _IDGROUP;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntityRef<GROUPNAME> _GROUPNAME;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnIDGROUPChanging(System.Nullable<int> value);
    partial void OnIDGROUPChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public GROUPPERMISSION()
		{
			this._GROUPNAME = default(EntityRef<GROUPNAME>);
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NVarChar(51)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGROUP", DbType="Int")]
		public System.Nullable<int> IDGROUP
		{
			get
			{
				return this._IDGROUP;
			}
			set
			{
				if ((this._IDGROUP != value))
				{
					if (this._GROUPNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGROUPChanging(value);
					this.SendPropertyChanging();
					this._IDGROUP = value;
					this.SendPropertyChanged("IDGROUP");
					this.OnIDGROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUPNAME_GROUPPERMISSION", Storage="_GROUPNAME", ThisKey="IDGROUP", OtherKey="IDGROUP", IsForeignKey=true)]
		public GROUPNAME GROUPNAME
		{
			get
			{
				return this._GROUPNAME.Entity;
			}
			set
			{
				GROUPNAME previousValue = this._GROUPNAME.Entity;
				if (((previousValue != value) 
							|| (this._GROUPNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GROUPNAME.Entity = null;
						previousValue.GROUPPERMISSIONs.Remove(this);
					}
					this._GROUPNAME.Entity = value;
					if ((value != null))
					{
						value.GROUPPERMISSIONs.Add(this);
						this._IDGROUP = value.IDGROUP;
					}
					else
					{
						this._IDGROUP = default(Nullable<int>);
					}
					this.SendPropertyChanged("GROUPNAME");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_GROUPPERMISSION", Storage="_TAIKHOAN", ThisKey="TENDN", OtherKey="TENDN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.GROUPPERMISSIONs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.GROUPPERMISSIONs.Add(this);
						this._TENDN = value.TENDN;
					}
					else
					{
						this._TENDN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HINHTHUC")]
	public partial class HINHTHUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAHINHTHUC;
		
		private string _TENHINHTHUC;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHINHTHUCChanging(int value);
    partial void OnMAHINHTHUCChanged();
    partial void OnTENHINHTHUCChanging(string value);
    partial void OnTENHINHTHUCChanged();
    #endregion
		
		public HINHTHUC()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHINHTHUC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAHINHTHUC
		{
			get
			{
				return this._MAHINHTHUC;
			}
			set
			{
				if ((this._MAHINHTHUC != value))
				{
					this.OnMAHINHTHUCChanging(value);
					this.SendPropertyChanging();
					this._MAHINHTHUC = value;
					this.SendPropertyChanged("MAHINHTHUC");
					this.OnMAHINHTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHINHTHUC", DbType="NVarChar(MAX)")]
		public string TENHINHTHUC
		{
			get
			{
				return this._TENHINHTHUC;
			}
			set
			{
				if ((this._TENHINHTHUC != value))
				{
					this.OnTENHINHTHUCChanging(value);
					this.SendPropertyChanging();
					this._TENHINHTHUC = value;
					this.SendPropertyChanged("TENHINHTHUC");
					this.OnTENHINHTHUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHTHUC_HOADON", Storage="_HOADONs", ThisKey="MAHINHTHUC", OtherKey="MAHINHTHUCTHANHTOAN")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HINHTHUC = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HINHTHUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDHoaDon;
		
		private string _MAHD;
		
		private System.Nullable<int> _IDKhachHang;
		
		private string _MANV;
		
		private System.Nullable<int> _MAHINHTHUCTHANHTOAN;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<long> _TONGTIEN;
		
		private System.Nullable<int> _TINHTRANG;
		
		private string _GHICHU;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntityRef<HINHTHUC> _HINHTHUC;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDHoaDonChanging(int value);
    partial void OnIDHoaDonChanged();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnIDKhachHangChanging(System.Nullable<int> value);
    partial void OnIDKhachHangChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMAHINHTHUCTHANHTOANChanging(System.Nullable<int> value);
    partial void OnMAHINHTHUCTHANHTOANChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTIENChanging(System.Nullable<long> value);
    partial void OnTONGTIENChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public HOADON()
		{
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._HINHTHUC = default(EntityRef<HINHTHUC>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDHoaDon
		{
			get
			{
				return this._IDHoaDon;
			}
			set
			{
				if ((this._IDHoaDon != value))
				{
					this.OnIDHoaDonChanging(value);
					this.SendPropertyChanging();
					this._IDHoaDon = value;
					this.SendPropertyChanged("IDHoaDon");
					this.OnIDHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="NVarChar(51)")]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int")]
		public System.Nullable<int> IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NVarChar(21)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHINHTHUCTHANHTOAN", DbType="Int")]
		public System.Nullable<int> MAHINHTHUCTHANHTOAN
		{
			get
			{
				return this._MAHINHTHUCTHANHTOAN;
			}
			set
			{
				if ((this._MAHINHTHUCTHANHTOAN != value))
				{
					if (this._HINHTHUC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHINHTHUCTHANHTOANChanging(value);
					this.SendPropertyChanging();
					this._MAHINHTHUCTHANHTOAN = value;
					this.SendPropertyChanged("MAHINHTHUCTHANHTOAN");
					this.OnMAHINHTHUCTHANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="BigInt")]
		public System.Nullable<long> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(MAX)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CHITIETHD", Storage="_CHITIETHDs", ThisKey="IDHoaDon", OtherKey="IDHoaDon")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HINHTHUC_HOADON", Storage="_HINHTHUC", ThisKey="MAHINHTHUCTHANHTOAN", OtherKey="MAHINHTHUC", IsForeignKey=true)]
		public HINHTHUC HINHTHUC
		{
			get
			{
				return this._HINHTHUC.Entity;
			}
			set
			{
				HINHTHUC previousValue = this._HINHTHUC.Entity;
				if (((previousValue != value) 
							|| (this._HINHTHUC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HINHTHUC.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._HINHTHUC.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAHINHTHUCTHANHTOAN = value.MAHINHTHUC;
					}
					else
					{
						this._MAHINHTHUCTHANHTOAN = default(Nullable<int>);
					}
					this.SendPropertyChanged("HINHTHUC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="IDKhachHang", OtherKey="IDKhachHang", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._IDKhachHang = value.IDKhachHang;
					}
					else
					{
						this._IDKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANG")]
	public partial class HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHANG;
		
		private string _TENHANG;
		
		private string _THONGTIN;
		
		private string _LOGO;
		
		private string _URL;
		
		private string _BANNER;
		
		private string _QUOCGIA;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnTENHANGChanging(string value);
    partial void OnTENHANGChanged();
    partial void OnTHONGTINChanging(string value);
    partial void OnTHONGTINChanged();
    partial void OnLOGOChanging(string value);
    partial void OnLOGOChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnBANNERChanging(string value);
    partial void OnBANNERChanged();
    partial void OnQUOCGIAChanging(string value);
    partial void OnQUOCGIAChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public HANG()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="NVarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHANG", DbType="NVarChar(MAX)")]
		public string TENHANG
		{
			get
			{
				return this._TENHANG;
			}
			set
			{
				if ((this._TENHANG != value))
				{
					this.OnTENHANGChanging(value);
					this.SendPropertyChanging();
					this._TENHANG = value;
					this.SendPropertyChanged("TENHANG");
					this.OnTENHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THONGTIN", DbType="NVarChar(MAX)")]
		public string THONGTIN
		{
			get
			{
				return this._THONGTIN;
			}
			set
			{
				if ((this._THONGTIN != value))
				{
					this.OnTHONGTINChanging(value);
					this.SendPropertyChanging();
					this._THONGTIN = value;
					this.SendPropertyChanged("THONGTIN");
					this.OnTHONGTINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOGO", DbType="NVarChar(MAX)")]
		public string LOGO
		{
			get
			{
				return this._LOGO;
			}
			set
			{
				if ((this._LOGO != value))
				{
					this.OnLOGOChanging(value);
					this.SendPropertyChanging();
					this._LOGO = value;
					this.SendPropertyChanged("LOGO");
					this.OnLOGOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(MAX)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BANNER", DbType="NVarChar(MAX)")]
		public string BANNER
		{
			get
			{
				return this._BANNER;
			}
			set
			{
				if ((this._BANNER != value))
				{
					this.OnBANNERChanging(value);
					this.SendPropertyChanging();
					this._BANNER = value;
					this.SendPropertyChanged("BANNER");
					this.OnBANNERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUOCGIA", DbType="NVarChar(MAX)")]
		public string QUOCGIA
		{
			get
			{
				return this._QUOCGIA;
			}
			set
			{
				if ((this._QUOCGIA != value))
				{
					this.OnQUOCGIAChanging(value);
					this.SendPropertyChanging();
					this._QUOCGIA = value;
					this.SendPropertyChanged("QUOCGIA");
					this.OnQUOCGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_SANPHAMs", ThisKey="MAHANG", OtherKey="MAHANG")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHO")]
	public partial class KHO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKHO;
		
		private string _MASP;
		
		private string _QRCODE;
		
		private System.Nullable<int> _SOLUONG;
		
		private System.Nullable<int> _TRANGTHAI;
		
		private System.Nullable<System.DateTime> _NGAYNHAPHANG;
		
		private System.Nullable<System.DateTime> _NGAYBAN;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKHOChanging(int value);
    partial void OnIDKHOChanged();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnQRCODEChanging(string value);
    partial void OnQRCODEChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<int> value);
    partial void OnTRANGTHAIChanged();
    partial void OnNGAYNHAPHANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPHANGChanged();
    partial void OnNGAYBANChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYBANChanged();
    #endregion
		
		public KHO()
		{
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKHO", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKHO
		{
			get
			{
				return this._IDKHO;
			}
			set
			{
				if ((this._IDKHO != value))
				{
					this.OnIDKHOChanging(value);
					this.SendPropertyChanging();
					this._IDKHO = value;
					this.SendPropertyChanged("IDKHO");
					this.OnIDKHOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101)")]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QRCODE", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QRCODE
		{
			get
			{
				return this._QRCODE;
			}
			set
			{
				if ((this._QRCODE != value))
				{
					this.OnQRCODEChanging(value);
					this.SendPropertyChanging();
					this._QRCODE = value;
					this.SendPropertyChanged("QRCODE");
					this.OnQRCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Int")]
		public System.Nullable<int> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAPHANG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAPHANG
		{
			get
			{
				return this._NGAYNHAPHANG;
			}
			set
			{
				if ((this._NGAYNHAPHANG != value))
				{
					this.OnNGAYNHAPHANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAPHANG = value;
					this.SendPropertyChanged("NGAYNHAPHANG");
					this.OnNGAYNHAPHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYBAN", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYBAN
		{
			get
			{
				return this._NGAYBAN;
			}
			set
			{
				if ((this._NGAYBAN != value))
				{
					this.OnNGAYBANChanging(value);
					this.SendPropertyChanging();
					this._NGAYBAN = value;
					this.SendPropertyChanged("NGAYBAN");
					this.OnNGAYBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KHO", Storage="_SANPHAM", ThisKey="MASP", OtherKey="MASP", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.KHOs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.KHOs.Add(this);
						this._MASP = value.MASP;
					}
					else
					{
						this._MASP = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAITK")]
	public partial class LOAITK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<TAIKHOAN> _TAIKHOANs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAITK()
		{
			this._TAIKHOANs = new EntitySet<TAIKHOAN>(new Action<TAIKHOAN>(this.attach_TAIKHOANs), new Action<TAIKHOAN>(this.detach_TAIKHOANs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="NVarChar(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(MAX)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITK_TAIKHOAN", Storage="_TAIKHOANs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this._TAIKHOANs;
			}
			set
			{
				this._TAIKHOANs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITK = this;
		}
		
		private void detach_TAIKHOANs(TAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.LOAITK = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKhachHang;
		
		private string _MAKH;
		
		private string _TENKH;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private string _SOCMND;
		
		private string _TENDN;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<VOUCHER> _VOUCHERs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKhachHangChanging(int value);
    partial void OnIDKhachHangChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSOCMNDChanging(string value);
    partial void OnSOCMNDChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._VOUCHERs = new EntitySet<VOUCHER>(new Action<VOUCHER>(this.attach_VOUCHERs), new Action<VOUCHER>(this.detach_VOUCHERs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="NVarChar(51)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(MAX)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(MAX)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(MAX)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(MAX)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCMND", DbType="NVarChar(MAX)")]
		public string SOCMND
		{
			get
			{
				return this._SOCMND;
			}
			set
			{
				if ((this._SOCMND != value))
				{
					this.OnSOCMNDChanging(value);
					this.SendPropertyChanging();
					this._SOCMND = value;
					this.SendPropertyChanged("SOCMND");
					this.OnSOCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NVarChar(51)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="IDKhachHang", OtherKey="IDKhachHang")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VOUCHER", Storage="_VOUCHERs", ThisKey="IDKhachHang", OtherKey="IDKhachHang")]
		public EntitySet<VOUCHER> VOUCHERs
		{
			get
			{
				return this._VOUCHERs;
			}
			set
			{
				this._VOUCHERs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_TAIKHOAN", ThisKey="TENDN", OtherKey="TENDN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._TENDN = value.TENDN;
					}
					else
					{
						this._TENDN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_VOUCHERs(VOUCHER entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_VOUCHERs(VOUCHER entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKM;
		
		private System.Nullable<System.DateTime> _THOIGIANBD;
		
		private System.Nullable<System.DateTime> _THOIGIANKT;
		
		private System.Nullable<int> _KHUYENMAI1;
		
		private string _HINHANH;
		
		private string _TINHTRANG;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<CHITIETKHUYENMAI> _CHITIETKHUYENMAIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKMChanging(string value);
    partial void OnMAKMChanged();
    partial void OnTHOIGIANBDChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANBDChanged();
    partial void OnTHOIGIANKTChanging(System.Nullable<System.DateTime> value);
    partial void OnTHOIGIANKTChanged();
    partial void OnKHUYENMAI1Changing(System.Nullable<int> value);
    partial void OnKHUYENMAI1Changed();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._CHITIETKHUYENMAIs = new EntitySet<CHITIETKHUYENMAI>(new Action<CHITIETKHUYENMAI>(this.attach_CHITIETKHUYENMAIs), new Action<CHITIETKHUYENMAI>(this.detach_CHITIETKHUYENMAIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKM", DbType="NVarChar(201) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKM
		{
			get
			{
				return this._MAKM;
			}
			set
			{
				if ((this._MAKM != value))
				{
					this.OnMAKMChanging(value);
					this.SendPropertyChanging();
					this._MAKM = value;
					this.SendPropertyChanged("MAKM");
					this.OnMAKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANBD", DbType="Date")]
		public System.Nullable<System.DateTime> THOIGIANBD
		{
			get
			{
				return this._THOIGIANBD;
			}
			set
			{
				if ((this._THOIGIANBD != value))
				{
					this.OnTHOIGIANBDChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANBD = value;
					this.SendPropertyChanged("THOIGIANBD");
					this.OnTHOIGIANBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANKT", DbType="Date")]
		public System.Nullable<System.DateTime> THOIGIANKT
		{
			get
			{
				return this._THOIGIANKT;
			}
			set
			{
				if ((this._THOIGIANKT != value))
				{
					this.OnTHOIGIANKTChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANKT = value;
					this.SendPropertyChanged("THOIGIANKT");
					this.OnTHOIGIANKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="KHUYENMAI", Storage="_KHUYENMAI1", DbType="Int")]
		public System.Nullable<int> KHUYENMAI1
		{
			get
			{
				return this._KHUYENMAI1;
			}
			set
			{
				if ((this._KHUYENMAI1 != value))
				{
					this.OnKHUYENMAI1Changing(value);
					this.SendPropertyChanging();
					this._KHUYENMAI1 = value;
					this.SendPropertyChanged("KHUYENMAI1");
					this.OnKHUYENMAI1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(MAX)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(MAX)")]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_CHITIETKHUYENMAI", Storage="_CHITIETKHUYENMAIs", ThisKey="MAKM", OtherKey="MAKM")]
		public EntitySet<CHITIETKHUYENMAI> CHITIETKHUYENMAIs
		{
			get
			{
				return this._CHITIETKHUYENMAIs;
			}
			set
			{
				this._CHITIETKHUYENMAIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _TENNV;
		
		private string _GIOITINH;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _DIENTHOAI;
		
		private string _DIACHI;
		
		private string _SOCMND;
		
		private string _TENDN;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<TINTUC> _TINTUCs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnGIOITINHChanging(string value);
    partial void OnGIOITINHChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnDIENTHOAIChanging(string value);
    partial void OnDIENTHOAIChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSOCMNDChanging(string value);
    partial void OnSOCMNDChanged();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._TINTUCs = new EntitySet<TINTUC>(new Action<TINTUC>(this.attach_TINTUCs), new Action<TINTUC>(this.detach_TINTUCs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NVarChar(21) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(MAX)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIOITINH", DbType="NVarChar(MAX)")]
		public string GIOITINH
		{
			get
			{
				return this._GIOITINH;
			}
			set
			{
				if ((this._GIOITINH != value))
				{
					this.OnGIOITINHChanging(value);
					this.SendPropertyChanging();
					this._GIOITINH = value;
					this.SendPropertyChanged("GIOITINH");
					this.OnGIOITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="NVarChar(MAX)")]
		public string DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(MAX)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCMND", DbType="NVarChar(MAX)")]
		public string SOCMND
		{
			get
			{
				return this._SOCMND;
			}
			set
			{
				if ((this._SOCMND != value))
				{
					this.OnSOCMNDChanging(value);
					this.SendPropertyChanging();
					this._SOCMND = value;
					this.SendPropertyChanged("SOCMND");
					this.OnSOCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NVarChar(51)")]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TINTUC", Storage="_TINTUCs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<TINTUC> TINTUCs
		{
			get
			{
				return this._TINTUCs;
			}
			set
			{
				this._TINTUCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_TAIKHOAN", ThisKey="TENDN", OtherKey="TENDN", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHANVIENs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHANVIENs.Add(this);
						this._TENDN = value.TENDN;
					}
					else
					{
						this._TENDN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_TINTUCs(TINTUC entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NOIDUNGBH")]
	public partial class NOIDUNGBH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANOIDUNG;
		
		private string _NOIDUNG;
		
		private System.Nullable<int> _SONAMBH;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANOIDUNGChanging(string value);
    partial void OnMANOIDUNGChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnSONAMBHChanging(System.Nullable<int> value);
    partial void OnSONAMBHChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public NOIDUNGBH()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANOIDUNG", DbType="NVarChar(51) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANOIDUNG
		{
			get
			{
				return this._MANOIDUNG;
			}
			set
			{
				if ((this._MANOIDUNG != value))
				{
					this.OnMANOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._MANOIDUNG = value;
					this.SendPropertyChanged("MANOIDUNG");
					this.OnMANOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SONAMBH", DbType="Int")]
		public System.Nullable<int> SONAMBH
		{
			get
			{
				return this._SONAMBH;
			}
			set
			{
				if ((this._SONAMBH != value))
				{
					this.OnSONAMBHChanging(value);
					this.SendPropertyChanging();
					this._SONAMBH = value;
					this.SendPropertyChanged("SONAMBH");
					this.OnSONAMBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NOIDUNGBH_SANPHAM", Storage="_SANPHAMs", ThisKey="MANOIDUNG", OtherKey="MABAOHANH")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NOIDUNGBH = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.NOIDUNGBH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPhieuNhap;
		
		private string _MAPN;
		
		private string _MANV;
		
		private string _MAHANG;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<System.DateTime> _NGAYNHAPHANG;
		
		private System.Nullable<long> _TONGTIEN;
		
		private System.Nullable<bool> _TINHTRANG;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<CHITIETPN> _CHITIETPNs;
		
		private EntityRef<HANG> _HANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPhieuNhapChanging(int value);
    partial void OnIDPhieuNhapChanged();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnNGAYNHAPHANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPHANGChanged();
    partial void OnTONGTIENChanging(System.Nullable<long> value);
    partial void OnTONGTIENChanged();
    partial void OnTINHTRANGChanging(System.Nullable<bool> value);
    partial void OnTINHTRANGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CHITIETPNs = new EntitySet<CHITIETPN>(new Action<CHITIETPN>(this.attach_CHITIETPNs), new Action<CHITIETPN>(this.detach_CHITIETPNs));
			this._HANG = default(EntityRef<HANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhieuNhap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPhieuNhap
		{
			get
			{
				return this._IDPhieuNhap;
			}
			set
			{
				if ((this._IDPhieuNhap != value))
				{
					this.OnIDPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._IDPhieuNhap = value;
					this.SendPropertyChanged("IDPhieuNhap");
					this.OnIDPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="NVarChar(51)")]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NVarChar(21)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="NVarChar(11)")]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAPHANG", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAPHANG
		{
			get
			{
				return this._NGAYNHAPHANG;
			}
			set
			{
				if ((this._NGAYNHAPHANG != value))
				{
					this.OnNGAYNHAPHANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAPHANG = value;
					this.SendPropertyChanged("NGAYNHAPHANG");
					this.OnNGAYNHAPHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="BigInt")]
		public System.Nullable<long> TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Bit")]
		public System.Nullable<bool> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CHITIETPN", Storage="_CHITIETPNs", ThisKey="IDPhieuNhap", OtherKey="IDPhieuNhap")]
		public EntitySet<CHITIETPN> CHITIETPNs
		{
			get
			{
				return this._CHITIETPNs;
			}
			set
			{
				this._CHITIETPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_PHIEUNHAP", Storage="_HANG", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(string);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENDN;
		
		private string _MATKHAU;
		
		private string _MALOAI;
		
		private string _Email;
		
		private string _token;
		
		private string _key_tfa;
		
		private System.Nullable<System.DateTime> _date_send;
		
		private System.Nullable<bool> _userConfirm;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<GROUPPERMISSION> _GROUPPERMISSIONs;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
		private EntitySet<NHANVIEN> _NHANVIENs;
		
		private EntityRef<LOAITK> _LOAITK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENDNChanging(string value);
    partial void OnTENDNChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnMALOAIChanging(string value);
    partial void OnMALOAIChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OntokenChanging(string value);
    partial void OntokenChanged();
    partial void Onkey_tfaChanging(string value);
    partial void Onkey_tfaChanged();
    partial void Ondate_sendChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_sendChanged();
    partial void OnuserConfirmChanging(System.Nullable<bool> value);
    partial void OnuserConfirmChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._GROUPPERMISSIONs = new EntitySet<GROUPPERMISSION>(new Action<GROUPPERMISSION>(this.attach_GROUPPERMISSIONs), new Action<GROUPPERMISSION>(this.detach_GROUPPERMISSIONs));
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
			this._LOAITK = default(EntityRef<LOAITK>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDN", DbType="NVarChar(51) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENDN
		{
			get
			{
				return this._TENDN;
			}
			set
			{
				if ((this._TENDN != value))
				{
					this.OnTENDNChanging(value);
					this.SendPropertyChanging();
					this._TENDN = value;
					this.SendPropertyChanged("TENDN");
					this.OnTENDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(MAX)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="NVarChar(11)")]
		public string MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAITK.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="NVarChar(MAX)")]
		public string token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_key_tfa", DbType="NVarChar(MAX)")]
		public string key_tfa
		{
			get
			{
				return this._key_tfa;
			}
			set
			{
				if ((this._key_tfa != value))
				{
					this.Onkey_tfaChanging(value);
					this.SendPropertyChanging();
					this._key_tfa = value;
					this.SendPropertyChanged("key_tfa");
					this.Onkey_tfaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_send", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_send
		{
			get
			{
				return this._date_send;
			}
			set
			{
				if ((this._date_send != value))
				{
					this.Ondate_sendChanging(value);
					this.SendPropertyChanging();
					this._date_send = value;
					this.SendPropertyChanged("date_send");
					this.Ondate_sendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userConfirm", DbType="Bit")]
		public System.Nullable<bool> userConfirm
		{
			get
			{
				return this._userConfirm;
			}
			set
			{
				if ((this._userConfirm != value))
				{
					this.OnuserConfirmChanging(value);
					this.SendPropertyChanging();
					this._userConfirm = value;
					this.SendPropertyChanged("userConfirm");
					this.OnuserConfirmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BINHLUAN", Storage="_BINHLUANs", ThisKey="TENDN", OtherKey="TENDN")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_GROUPPERMISSION", Storage="_GROUPPERMISSIONs", ThisKey="TENDN", OtherKey="TENDN")]
		public EntitySet<GROUPPERMISSION> GROUPPERMISSIONs
		{
			get
			{
				return this._GROUPPERMISSIONs;
			}
			set
			{
				this._GROUPPERMISSIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="TENDN", OtherKey="TENDN")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHANVIEN", Storage="_NHANVIENs", ThisKey="TENDN", OtherKey="TENDN")]
		public EntitySet<NHANVIEN> NHANVIENs
		{
			get
			{
				return this._NHANVIENs;
			}
			set
			{
				this._NHANVIENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAITK_TAIKHOAN", Storage="_LOAITK", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAITK LOAITK
		{
			get
			{
				return this._LOAITK.Entity;
			}
			set
			{
				LOAITK previousValue = this._LOAITK.Entity;
				if (((previousValue != value) 
							|| (this._LOAITK.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAITK.Entity = null;
						previousValue.TAIKHOANs.Remove(this);
					}
					this._LOAITK.Entity = value;
					if ((value != null))
					{
						value.TAIKHOANs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(string);
					}
					this.SendPropertyChanged("LOAITK");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_GROUPPERMISSIONs(GROUPPERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_GROUPPERMISSIONs(GROUPPERMISSION entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHANVIENs(NHANVIEN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TINTUC")]
	public partial class TINTUC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTINTUC;
		
		private string _TIEUDE;
		
		private string _TOMTAT;
		
		private string _NOIDUNG;
		
		private string _HINHDAIDIEN;
		
		private System.Nullable<System.DateTime> _NGAYDANG;
		
		private string _MANV;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTINTUCChanging(int value);
    partial void OnIDTINTUCChanged();
    partial void OnTIEUDEChanging(string value);
    partial void OnTIEUDEChanged();
    partial void OnTOMTATChanging(string value);
    partial void OnTOMTATChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnHINHDAIDIENChanging(string value);
    partial void OnHINHDAIDIENChanged();
    partial void OnNGAYDANGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYDANGChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public TINTUC()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTINTUC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTINTUC
		{
			get
			{
				return this._IDTINTUC;
			}
			set
			{
				if ((this._IDTINTUC != value))
				{
					this.OnIDTINTUCChanging(value);
					this.SendPropertyChanging();
					this._IDTINTUC = value;
					this.SendPropertyChanged("IDTINTUC");
					this.OnIDTINTUCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIEUDE", DbType="NVarChar(MAX)")]
		public string TIEUDE
		{
			get
			{
				return this._TIEUDE;
			}
			set
			{
				if ((this._TIEUDE != value))
				{
					this.OnTIEUDEChanging(value);
					this.SendPropertyChanging();
					this._TIEUDE = value;
					this.SendPropertyChanged("TIEUDE");
					this.OnTIEUDEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOMTAT", DbType="NVarChar(MAX)")]
		public string TOMTAT
		{
			get
			{
				return this._TOMTAT;
			}
			set
			{
				if ((this._TOMTAT != value))
				{
					this.OnTOMTATChanging(value);
					this.SendPropertyChanging();
					this._TOMTAT = value;
					this.SendPropertyChanged("TOMTAT");
					this.OnTOMTATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(MAX)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHDAIDIEN", DbType="NVarChar(MAX)")]
		public string HINHDAIDIEN
		{
			get
			{
				return this._HINHDAIDIEN;
			}
			set
			{
				if ((this._HINHDAIDIEN != value))
				{
					this.OnHINHDAIDIENChanging(value);
					this.SendPropertyChanging();
					this._HINHDAIDIEN = value;
					this.SendPropertyChanged("HINHDAIDIEN");
					this.OnHINHDAIDIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYDANG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYDANG
		{
			get
			{
				return this._NGAYDANG;
			}
			set
			{
				if ((this._NGAYDANG != value))
				{
					this.OnNGAYDANGChanging(value);
					this.SendPropertyChanging();
					this._NGAYDANG = value;
					this.SendPropertyChanged("NGAYDANG");
					this.OnNGAYDANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NVarChar(21)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TINTUC_BINHLUAN", Storage="_BINHLUANs", ThisKey="IDTINTUC", OtherKey="IDTINTUC")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_TINTUC", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.TINTUCs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.TINTUCs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TINTUC = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.TINTUC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VOUCHER")]
	public partial class VOUCHER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACHUONGTRINH;
		
		private string _MAVOUCHER;
		
		private System.Nullable<int> _IDKhachHang;
		
		private System.Nullable<System.DateTime> _NGAYSUDUNG;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntityRef<CHUONGTRINHVOUCHER> _CHUONGTRINHVOUCHER;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACHUONGTRINHChanging(string value);
    partial void OnMACHUONGTRINHChanged();
    partial void OnMAVOUCHERChanging(string value);
    partial void OnMAVOUCHERChanged();
    partial void OnIDKhachHangChanging(System.Nullable<int> value);
    partial void OnIDKhachHangChanged();
    partial void OnNGAYSUDUNGChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSUDUNGChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public VOUCHER()
		{
			this._CHUONGTRINHVOUCHER = default(EntityRef<CHUONGTRINHVOUCHER>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACHUONGTRINH", DbType="NVarChar(51) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACHUONGTRINH
		{
			get
			{
				return this._MACHUONGTRINH;
			}
			set
			{
				if ((this._MACHUONGTRINH != value))
				{
					if (this._CHUONGTRINHVOUCHER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACHUONGTRINHChanging(value);
					this.SendPropertyChanging();
					this._MACHUONGTRINH = value;
					this.SendPropertyChanged("MACHUONGTRINH");
					this.OnMACHUONGTRINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAVOUCHER", DbType="NVarChar(101) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAVOUCHER
		{
			get
			{
				return this._MAVOUCHER;
			}
			set
			{
				if ((this._MAVOUCHER != value))
				{
					this.OnMAVOUCHERChanging(value);
					this.SendPropertyChanging();
					this._MAVOUCHER = value;
					this.SendPropertyChanged("MAVOUCHER");
					this.OnMAVOUCHERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int")]
		public System.Nullable<int> IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSUDUNG", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSUDUNG
		{
			get
			{
				return this._NGAYSUDUNG;
			}
			set
			{
				if ((this._NGAYSUDUNG != value))
				{
					this.OnNGAYSUDUNGChanging(value);
					this.SendPropertyChanging();
					this._NGAYSUDUNG = value;
					this.SendPropertyChanged("NGAYSUDUNG");
					this.OnNGAYSUDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUONGTRINHVOUCHER_VOUCHER", Storage="_CHUONGTRINHVOUCHER", ThisKey="MACHUONGTRINH", OtherKey="MACHUONGTRINH", IsForeignKey=true)]
		public CHUONGTRINHVOUCHER CHUONGTRINHVOUCHER
		{
			get
			{
				return this._CHUONGTRINHVOUCHER.Entity;
			}
			set
			{
				CHUONGTRINHVOUCHER previousValue = this._CHUONGTRINHVOUCHER.Entity;
				if (((previousValue != value) 
							|| (this._CHUONGTRINHVOUCHER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUONGTRINHVOUCHER.Entity = null;
						previousValue.VOUCHERs.Remove(this);
					}
					this._CHUONGTRINHVOUCHER.Entity = value;
					if ((value != null))
					{
						value.VOUCHERs.Add(this);
						this._MACHUONGTRINH = value.MACHUONGTRINH;
					}
					else
					{
						this._MACHUONGTRINH = default(string);
					}
					this.SendPropertyChanged("CHUONGTRINHVOUCHER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_VOUCHER", Storage="_KHACHHANG", ThisKey="IDKhachHang", OtherKey="IDKhachHang", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.VOUCHERs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.VOUCHERs.Add(this);
						this._IDKhachHang = value.IDKhachHang;
					}
					else
					{
						this._IDKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASP;
		
		private string _TENSP;
		
		private System.Nullable<long> _DONGIA;
		
		private string _HINHANH;
		
		private string _CHITIETSP;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _MAHANG;
		
		private string _MABAOHANH;
		
		private System.Nullable<int> _ThoiHanBH;
		
		private string _MADM;
		
		private string _DONGSP;
		
		private string _NANGLUONG;
		
		private string _KICHTHUOC;
		
		private string _LOAIDAY;
		
		private string _XUATSU;
		
		private string _MOTASP;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<BINHLUAN> _BINHLUANs;
		
		private EntitySet<CHITIETKHUYENMAI> _CHITIETKHUYENMAIs;
		
		private EntitySet<CHITIETHD> _CHITIETHDs;
		
		private EntitySet<CHITIETPN> _CHITIETPNs;
		
		private EntitySet<KHO> _KHOs;
		
		private EntityRef<DANHMUCSP> _DANHMUCSP;
		
		private EntityRef<HANG> _HANG;
		
		private EntityRef<NOIDUNGBH> _NOIDUNGBH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASPChanging(string value);
    partial void OnMASPChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnDONGIAChanging(System.Nullable<long> value);
    partial void OnDONGIAChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnCHITIETSPChanging(string value);
    partial void OnCHITIETSPChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnMAHANGChanging(string value);
    partial void OnMAHANGChanged();
    partial void OnMABAOHANHChanging(string value);
    partial void OnMABAOHANHChanged();
    partial void OnThoiHanBHChanging(System.Nullable<int> value);
    partial void OnThoiHanBHChanged();
    partial void OnMADMChanging(string value);
    partial void OnMADMChanged();
    partial void OnDONGSPChanging(string value);
    partial void OnDONGSPChanged();
    partial void OnNANGLUONGChanging(string value);
    partial void OnNANGLUONGChanged();
    partial void OnKICHTHUOCChanging(string value);
    partial void OnKICHTHUOCChanged();
    partial void OnLOAIDAYChanging(string value);
    partial void OnLOAIDAYChanged();
    partial void OnXUATSUChanging(string value);
    partial void OnXUATSUChanged();
    partial void OnMOTASPChanging(string value);
    partial void OnMOTASPChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public SANPHAM()
		{
			this._BINHLUANs = new EntitySet<BINHLUAN>(new Action<BINHLUAN>(this.attach_BINHLUANs), new Action<BINHLUAN>(this.detach_BINHLUANs));
			this._CHITIETKHUYENMAIs = new EntitySet<CHITIETKHUYENMAI>(new Action<CHITIETKHUYENMAI>(this.attach_CHITIETKHUYENMAIs), new Action<CHITIETKHUYENMAI>(this.detach_CHITIETKHUYENMAIs));
			this._CHITIETHDs = new EntitySet<CHITIETHD>(new Action<CHITIETHD>(this.attach_CHITIETHDs), new Action<CHITIETHD>(this.detach_CHITIETHDs));
			this._CHITIETPNs = new EntitySet<CHITIETPN>(new Action<CHITIETPN>(this.attach_CHITIETPNs), new Action<CHITIETPN>(this.detach_CHITIETPNs));
			this._KHOs = new EntitySet<KHO>(new Action<KHO>(this.attach_KHOs), new Action<KHO>(this.detach_KHOs));
			this._DANHMUCSP = default(EntityRef<DANHMUCSP>);
			this._HANG = default(EntityRef<HANG>);
			this._NOIDUNGBH = default(EntityRef<NOIDUNGBH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASP", DbType="NVarChar(101) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASP
		{
			get
			{
				return this._MASP;
			}
			set
			{
				if ((this._MASP != value))
				{
					this.OnMASPChanging(value);
					this.SendPropertyChanging();
					this._MASP = value;
					this.SendPropertyChanged("MASP");
					this.OnMASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NVarChar(MAX)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="BigInt")]
		public System.Nullable<long> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(MAX)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHITIETSP", DbType="NVarChar(MAX)")]
		public string CHITIETSP
		{
			get
			{
				return this._CHITIETSP;
			}
			set
			{
				if ((this._CHITIETSP != value))
				{
					this.OnCHITIETSPChanging(value);
					this.SendPropertyChanging();
					this._CHITIETSP = value;
					this.SendPropertyChanged("CHITIETSP");
					this.OnCHITIETSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHANG", DbType="NVarChar(11)")]
		public string MAHANG
		{
			get
			{
				return this._MAHANG;
			}
			set
			{
				if ((this._MAHANG != value))
				{
					if (this._HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHANGChanging(value);
					this.SendPropertyChanging();
					this._MAHANG = value;
					this.SendPropertyChanged("MAHANG");
					this.OnMAHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABAOHANH", DbType="NVarChar(51)")]
		public string MABAOHANH
		{
			get
			{
				return this._MABAOHANH;
			}
			set
			{
				if ((this._MABAOHANH != value))
				{
					if (this._NOIDUNGBH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABAOHANHChanging(value);
					this.SendPropertyChanging();
					this._MABAOHANH = value;
					this.SendPropertyChanged("MABAOHANH");
					this.OnMABAOHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiHanBH", DbType="Int")]
		public System.Nullable<int> ThoiHanBH
		{
			get
			{
				return this._ThoiHanBH;
			}
			set
			{
				if ((this._ThoiHanBH != value))
				{
					this.OnThoiHanBHChanging(value);
					this.SendPropertyChanging();
					this._ThoiHanBH = value;
					this.SendPropertyChanged("ThoiHanBH");
					this.OnThoiHanBHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADM", DbType="NVarChar(11)")]
		public string MADM
		{
			get
			{
				return this._MADM;
			}
			set
			{
				if ((this._MADM != value))
				{
					if (this._DANHMUCSP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADMChanging(value);
					this.SendPropertyChanging();
					this._MADM = value;
					this.SendPropertyChanged("MADM");
					this.OnMADMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGSP", DbType="NVarChar(MAX)")]
		public string DONGSP
		{
			get
			{
				return this._DONGSP;
			}
			set
			{
				if ((this._DONGSP != value))
				{
					this.OnDONGSPChanging(value);
					this.SendPropertyChanging();
					this._DONGSP = value;
					this.SendPropertyChanged("DONGSP");
					this.OnDONGSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NANGLUONG", DbType="NVarChar(MAX)")]
		public string NANGLUONG
		{
			get
			{
				return this._NANGLUONG;
			}
			set
			{
				if ((this._NANGLUONG != value))
				{
					this.OnNANGLUONGChanging(value);
					this.SendPropertyChanging();
					this._NANGLUONG = value;
					this.SendPropertyChanged("NANGLUONG");
					this.OnNANGLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KICHTHUOC", DbType="NVarChar(MAX)")]
		public string KICHTHUOC
		{
			get
			{
				return this._KICHTHUOC;
			}
			set
			{
				if ((this._KICHTHUOC != value))
				{
					this.OnKICHTHUOCChanging(value);
					this.SendPropertyChanging();
					this._KICHTHUOC = value;
					this.SendPropertyChanged("KICHTHUOC");
					this.OnKICHTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOAIDAY", DbType="NVarChar(MAX)")]
		public string LOAIDAY
		{
			get
			{
				return this._LOAIDAY;
			}
			set
			{
				if ((this._LOAIDAY != value))
				{
					this.OnLOAIDAYChanging(value);
					this.SendPropertyChanging();
					this._LOAIDAY = value;
					this.SendPropertyChanged("LOAIDAY");
					this.OnLOAIDAYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XUATSU", DbType="NVarChar(MAX)")]
		public string XUATSU
		{
			get
			{
				return this._XUATSU;
			}
			set
			{
				if ((this._XUATSU != value))
				{
					this.OnXUATSUChanging(value);
					this.SendPropertyChanging();
					this._XUATSU = value;
					this.SendPropertyChanged("XUATSU");
					this.OnXUATSUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTASP", DbType="NVarChar(MAX)")]
		public string MOTASP
		{
			get
			{
				return this._MOTASP;
			}
			set
			{
				if ((this._MOTASP != value))
				{
					this.OnMOTASPChanging(value);
					this.SendPropertyChanging();
					this._MOTASP = value;
					this.SendPropertyChanged("MOTASP");
					this.OnMOTASPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_BINHLUAN", Storage="_BINHLUANs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<BINHLUAN> BINHLUANs
		{
			get
			{
				return this._BINHLUANs;
			}
			set
			{
				this._BINHLUANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETKHUYENMAI", Storage="_CHITIETKHUYENMAIs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETKHUYENMAI> CHITIETKHUYENMAIs
		{
			get
			{
				return this._CHITIETKHUYENMAIs;
			}
			set
			{
				this._CHITIETKHUYENMAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETHD", Storage="_CHITIETHDs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETHD> CHITIETHDs
		{
			get
			{
				return this._CHITIETHDs;
			}
			set
			{
				this._CHITIETHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_CHITIETPN", Storage="_CHITIETPNs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<CHITIETPN> CHITIETPNs
		{
			get
			{
				return this._CHITIETPNs;
			}
			set
			{
				this._CHITIETPNs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_KHO", Storage="_KHOs", ThisKey="MASP", OtherKey="MASP")]
		public EntitySet<KHO> KHOs
		{
			get
			{
				return this._KHOs;
			}
			set
			{
				this._KHOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DANHMUCSP_SANPHAM", Storage="_DANHMUCSP", ThisKey="MADM", OtherKey="MADM", IsForeignKey=true)]
		public DANHMUCSP DANHMUCSP
		{
			get
			{
				return this._DANHMUCSP.Entity;
			}
			set
			{
				DANHMUCSP previousValue = this._DANHMUCSP.Entity;
				if (((previousValue != value) 
							|| (this._DANHMUCSP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DANHMUCSP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._DANHMUCSP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MADM = value.MADM;
					}
					else
					{
						this._MADM = default(string);
					}
					this.SendPropertyChanged("DANHMUCSP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANG_SANPHAM", Storage="_HANG", ThisKey="MAHANG", OtherKey="MAHANG", IsForeignKey=true)]
		public HANG HANG
		{
			get
			{
				return this._HANG.Entity;
			}
			set
			{
				HANG previousValue = this._HANG.Entity;
				if (((previousValue != value) 
							|| (this._HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANG.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._HANG.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MAHANG = value.MAHANG;
					}
					else
					{
						this._MAHANG = default(string);
					}
					this.SendPropertyChanged("HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NOIDUNGBH_SANPHAM", Storage="_NOIDUNGBH", ThisKey="MABAOHANH", OtherKey="MANOIDUNG", IsForeignKey=true)]
		public NOIDUNGBH NOIDUNGBH
		{
			get
			{
				return this._NOIDUNGBH.Entity;
			}
			set
			{
				NOIDUNGBH previousValue = this._NOIDUNGBH.Entity;
				if (((previousValue != value) 
							|| (this._NOIDUNGBH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NOIDUNGBH.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._NOIDUNGBH.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._MABAOHANH = value.MANOIDUNG;
					}
					else
					{
						this._MABAOHANH = default(string);
					}
					this.SendPropertyChanged("NOIDUNGBH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_BINHLUANs(BINHLUAN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETKHUYENMAIs(CHITIETKHUYENMAI entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETHDs(CHITIETHD entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_CHITIETPNs(CHITIETPN entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
		
		private void attach_KHOs(KHO entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_KHOs(KHO entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMISSION")]
	public partial class PERMISSION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPERMISSION;
		
		private System.Nullable<int> _IDGROUP;
		
		private System.Nullable<bool> _PERMISSION_SALE;
		
		private System.Nullable<bool> _PERMISSION_EDITUSER;
		
		private System.Nullable<bool> _PERMISSION_REPORT;
		
		private System.Nullable<bool> _PERMISSION_STOCKWARE;
		
		private System.Nullable<bool> _PERMISSION_EDITSALESOFF;
		
		private EntityRef<GROUPNAME> _GROUPNAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPERMISSIONChanging(int value);
    partial void OnIDPERMISSIONChanged();
    partial void OnIDGROUPChanging(System.Nullable<int> value);
    partial void OnIDGROUPChanged();
    partial void OnPERMISSION_SALEChanging(System.Nullable<bool> value);
    partial void OnPERMISSION_SALEChanged();
    partial void OnPERMISSION_EDITUSERChanging(System.Nullable<bool> value);
    partial void OnPERMISSION_EDITUSERChanged();
    partial void OnPERMISSION_REPORTChanging(System.Nullable<bool> value);
    partial void OnPERMISSION_REPORTChanged();
    partial void OnPERMISSION_STOCKWAREChanging(System.Nullable<bool> value);
    partial void OnPERMISSION_STOCKWAREChanged();
    partial void OnPERMISSION_EDITSALESOFFChanging(System.Nullable<bool> value);
    partial void OnPERMISSION_EDITSALESOFFChanged();
    #endregion
		
		public PERMISSION()
		{
			this._GROUPNAME = default(EntityRef<GROUPNAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPERMISSION", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPERMISSION
		{
			get
			{
				return this._IDPERMISSION;
			}
			set
			{
				if ((this._IDPERMISSION != value))
				{
					this.OnIDPERMISSIONChanging(value);
					this.SendPropertyChanging();
					this._IDPERMISSION = value;
					this.SendPropertyChanged("IDPERMISSION");
					this.OnIDPERMISSIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGROUP", DbType="Int")]
		public System.Nullable<int> IDGROUP
		{
			get
			{
				return this._IDGROUP;
			}
			set
			{
				if ((this._IDGROUP != value))
				{
					if (this._GROUPNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGROUPChanging(value);
					this.SendPropertyChanging();
					this._IDGROUP = value;
					this.SendPropertyChanged("IDGROUP");
					this.OnIDGROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERMISSION_SALE", DbType="Bit")]
		public System.Nullable<bool> PERMISSION_SALE
		{
			get
			{
				return this._PERMISSION_SALE;
			}
			set
			{
				if ((this._PERMISSION_SALE != value))
				{
					this.OnPERMISSION_SALEChanging(value);
					this.SendPropertyChanging();
					this._PERMISSION_SALE = value;
					this.SendPropertyChanged("PERMISSION_SALE");
					this.OnPERMISSION_SALEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERMISSION_EDITUSER", DbType="Bit")]
		public System.Nullable<bool> PERMISSION_EDITUSER
		{
			get
			{
				return this._PERMISSION_EDITUSER;
			}
			set
			{
				if ((this._PERMISSION_EDITUSER != value))
				{
					this.OnPERMISSION_EDITUSERChanging(value);
					this.SendPropertyChanging();
					this._PERMISSION_EDITUSER = value;
					this.SendPropertyChanged("PERMISSION_EDITUSER");
					this.OnPERMISSION_EDITUSERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERMISSION_REPORT", DbType="Bit")]
		public System.Nullable<bool> PERMISSION_REPORT
		{
			get
			{
				return this._PERMISSION_REPORT;
			}
			set
			{
				if ((this._PERMISSION_REPORT != value))
				{
					this.OnPERMISSION_REPORTChanging(value);
					this.SendPropertyChanging();
					this._PERMISSION_REPORT = value;
					this.SendPropertyChanged("PERMISSION_REPORT");
					this.OnPERMISSION_REPORTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERMISSION_STOCKWARE", DbType="Bit")]
		public System.Nullable<bool> PERMISSION_STOCKWARE
		{
			get
			{
				return this._PERMISSION_STOCKWARE;
			}
			set
			{
				if ((this._PERMISSION_STOCKWARE != value))
				{
					this.OnPERMISSION_STOCKWAREChanging(value);
					this.SendPropertyChanging();
					this._PERMISSION_STOCKWARE = value;
					this.SendPropertyChanged("PERMISSION_STOCKWARE");
					this.OnPERMISSION_STOCKWAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERMISSION_EDITSALESOFF", DbType="Bit")]
		public System.Nullable<bool> PERMISSION_EDITSALESOFF
		{
			get
			{
				return this._PERMISSION_EDITSALESOFF;
			}
			set
			{
				if ((this._PERMISSION_EDITSALESOFF != value))
				{
					this.OnPERMISSION_EDITSALESOFFChanging(value);
					this.SendPropertyChanging();
					this._PERMISSION_EDITSALESOFF = value;
					this.SendPropertyChanged("PERMISSION_EDITSALESOFF");
					this.OnPERMISSION_EDITSALESOFFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GROUPNAME_PERMISSION", Storage="_GROUPNAME", ThisKey="IDGROUP", OtherKey="IDGROUP", IsForeignKey=true)]
		public GROUPNAME GROUPNAME
		{
			get
			{
				return this._GROUPNAME.Entity;
			}
			set
			{
				GROUPNAME previousValue = this._GROUPNAME.Entity;
				if (((previousValue != value) 
							|| (this._GROUPNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GROUPNAME.Entity = null;
						previousValue.PERMISSIONs.Remove(this);
					}
					this._GROUPNAME.Entity = value;
					if ((value != null))
					{
						value.PERMISSIONs.Add(this);
						this._IDGROUP = value.IDGROUP;
					}
					else
					{
						this._IDGROUP = default(Nullable<int>);
					}
					this.SendPropertyChanged("GROUPNAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
